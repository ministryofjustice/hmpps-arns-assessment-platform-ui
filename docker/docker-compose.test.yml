# docker-compose.test.yml is used to spin up the app specifically for integration testing.
# It stacks on top of `docker-compose.local.yml`, allowing tests to run
# against local deployment.

services:
  wiremock:
    image: wiremock/wiremock
    networks:
      - hmpps
    restart: always
    ports:
      - "9091:8080"

  ui:
    build:
      target: production
    depends_on:
      - wiremock
    command: npm run start
    environment:
      NODE_ENV: development
      AUTH_CODE_CLIENT_ID: clientid
      AUTH_CODE_CLIENT_SECRET: clientsecret
      CLIENT_CREDS_CLIENT_ID: clientid
      CLIENT_CREDS_CLIENT_SECRET: clientsecret
      HMPPS_AUTH_URL: http://wiremock:8080/auth
      HMPPS_AUTH_EXTERNAL_URL: ${HMPPS_AUTH_EXTERNAL_URL:-http://localhost:9091/auth}
      TOKEN_VERIFICATION_API_URL: http://wiremock:8080/verification
      TOKEN_VERIFICATION_ENABLED: true
      EXAMPLE_API_URL: http://wiremock:8080/example-api
      ENVIRONMENT_NAME: dev

  playwright:
    image: mcr.microsoft.com/playwright:v1.55.1-noble # Must match version in package-lock
    networks:
      - hmpps
    depends_on:
      - ui
      - wiremock
    environment:
      CI: true
      BASE_URL: http://ui:3000
      WIREMOCK_URL: http://wiremock:8080/__admin
    working_dir: /playwright
    entrypoint: sh
    command: -c "npm ci && npx playwright test"
    volumes:
      - ../package.json:/playwright/package.json
      - ../package-lock.json:/playwright/package-lock.json
      - ../playwright.config.ts:/playwright/playwright.config.ts
      - ../integration_tests:/playwright/integration_tests
      - ../test_results:/playwright/test_results
